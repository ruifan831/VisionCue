plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.compose)
    alias(libs.plugins.kotlin.serialization)
}

android {
    namespace 'com.zrgenesiscloud.visioncue'
    compileSdk 35

    defaultConfig {
        applicationId "com.zrgenesiscloud.visioncue"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        
        // Default build config fields
        buildConfigField "String", "API_BASE_URL", "\"https://api.visioncue.com/\""
        buildConfigField "boolean", "ENABLE_LOGGING", "false"
        buildConfigField "String", "BUILD_TYPE", "\"default\""
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_BASE_URL", "\"http://10.0.2.2:8000/\""
            buildConfigField "boolean", "ENABLE_LOGGING", "true"
            buildConfigField "String", "BUILD_TYPE", "\"debug\""
            debuggable true
        }
        release {
            buildConfigField "String", "API_BASE_URL", "\"https://api.visioncue.com/\""
            buildConfigField "boolean", "ENABLE_LOGGING", "false"
            buildConfigField "String", "BUILD_TYPE", "\"release\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    buildFeatures {
        compose true
        buildConfig true  // Enable BuildConfig generation
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.lifecycle.runtime.ktx
    implementation libs.androidx.activity.compose
    implementation platform(libs.androidx.compose.bom)
    implementation libs.androidx.ui
    implementation libs.androidx.ui.graphics
    implementation libs.androidx.ui.tooling.preview
    implementation libs.androidx.material3
    implementation libs.androidx.navigation.compose
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core
    androidTestImplementation platform(libs.androidx.compose.bom)
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.tooling
    debugImplementation libs.androidx.ui.test.manifest
    implementation libs.kotlinx.serialization.json
    implementation libs.kotlinx.datetime
    implementation 'com.tom-roush:pdfbox-android:2.0.27.0'
    implementation libs.androidx.compose.material.icons.extended
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Networking dependencies
    implementation libs.retrofit
    implementation libs.retrofit.kotlinx.serialization
    implementation libs.okhttp
    implementation libs.okhttp.logging

    //注：adn如果通过aar方式引入，需要把对应的adn aar放到libs目录下，注意aar名称和版本号需要和下面命令行匹配上
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    
    //融合基础包，必须引入
     implementation(name: "open_ad_sdk_6.8.0.9", ext: 'aar')
    // Add multidex support
    implementation 'androidx.multidex:multidex:2.0.1'
}
